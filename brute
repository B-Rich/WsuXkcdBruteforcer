#!/usr/local/bin/python3

#   skeinsum
#   Copyright 2008, 2009 Hagen FÃ¼rstenau <hagen@zhuliguan.net>
#
#   Demonstrates Skein hashing with PySkein.
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import os
import skein
from io import DEFAULT_BUFFER_SIZE

HASH = skein.skein1024
DIGEST_BITS = 1024


def printsum(name):
    h = HASH(digest_bits=DIGEST_BITS)
    h.update(name.encode('latin-1'))
    val = int(h.hexdigest(),16)
    xkcdhash = int('5b4da95f5fa08280fc9879df44f418c8f9f12ba424b7757de02bbdfbae0d4c4fdf9317c80cc5fe04c6429073466cf29706b8c25999ddd2f6540d4475cc977b87f4757be023f19b8f4035d7722886b78869826de916a79cf9c94cc79cd4347d24b567aa3e2390a573a373a48a5e676640c79cc70197e1c5e7f902fb53ca1858b6',16)
    comparison = val ^ xkcdhash
    score = bitCount(comparison)
    try:
        print("{0}  {1}   {2}".format(val, name, score))
    except IOError as e:
        if e.errno != 32:
            raise
def bitCount(int_type):
    count = 0
    while(int_type):
        int_type &= int_type - 1
        count += 1
    return(count)

printsum(sys.argv[1])

